### 设置###
log4j.rootLogger = warn,console,myFile

#######配置输出源console的具体实现为控制台输出#######
#定义输出源别名console（即根日志记录器定义的输出源）
#的实现类是ConsoleAppender（控制台输出源）
log4j.appender.console=org.apache.log4j.ConsoleAppender
#指定日志输出格式的格式转换器为PatternLayout实现类
log4j.appender.console.layout=org.apache.log4j.PatternLayout
#定义日志输出的具体格式
log4j.appender.console.layout.ConversionPattern=%d %-5p [%c.%M()] - %m%n

#######配置输出源myFile的具体实现为文件输出#######
#定义输出源别名myFile（即根日志记录器定义的输出源）
#的实现类是RollingFileAppender（文件输出源）
log4j.appender.myFile=org.apache.log4j.RollingFileAppender
#定义日志文件的存储路径
log4j.appender.myFile.File=log4j12345.log
#定义日志文件的大小
log4j.appender.myFile.MaxFileSize=1024kb
#定义日志文件最多生成几个（从0开始算1个，即此处最多3个文件）
#超过该大小则会覆盖前面生成的文件
log4j.appender.myFile.MaxBackupIndex=2
#指定日志输出格式的格式转换器为PatternLayout实现类
log4j.appender.myFile.layout=org.apache.log4j.PatternLayout
#定义日志输出的具体格式
log4j.appender.myFile.layout.ConversionPattern=%d %-5p [%c.%M()] - %m%n 

#######输出格式解释#######
#%d: 日志打印的时间点，默认格式为ISO8601，也可以另外指定格式，
#定义如下：  %d{yyy年MM月dd日 HH时mm分ss秒SSS}，则会输出：
#2018年01月06日 14时47分45秒590
#%p: 输出日志级别，即DEBUG，INFO，WARN，ERROR，FATAL
#%-5p：表示字符小于5位，则字符居左（不加“-”号则字符居右），你可以举一反三
#%c: 日志所在类的全名
#%M: 日志所在方法的名字
#%m: 日志信息
#%n: 输出一个回车换行符
#%L: 输出代码中的行号